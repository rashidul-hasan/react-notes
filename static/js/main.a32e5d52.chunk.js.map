{"version":3,"sources":["redux/actionCreators.js","redux/actions.js","components/Footer.js","components/Title.js","pages/Home.js","pages/AddEdit.js","pages/App.js","lib/statePersistor.js","redux/reducers.js","redux/index.js","serviceWorker.js","index.js"],"names":["addNote","id","title","content","type","note","updateNote","props","className","role","aria-label","href","Home","responseGoogle","data","console","log","notes","this","Title","to","map","i","onClick","key","ReactHtmlParser","Footer","React","Component","connect","state","AddEdit","RichTextEditor","createEmptyValue","currentlyEditingNote","pageTitle","onSaveButtonPressed","uuid","toString","resetFields","setState","onChange","search","location","params","URLSearchParams","mode","get","noteId","find","String","createValueFromString","aria-current","placeholder","value","e","target","style","height","App","path","exact","component","initialState","serializedState","localStorage","getItem","JSON","parse","err","loadState","store","createStore","action","Object","assign","editedNotes","subscribe","stringify","setItem","saveState","getState","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a32e5d52.chunk.js","sourcesContent":["import { ACTION_ADD_NOTE, ACTION_UPDATE_NOTE } from \"./actions\"\r\n\r\nexport const addNote = (id, title, content) => {\r\n    return {\r\n        type: ACTION_ADD_NOTE,\r\n        note: {\r\n            id,\r\n            title,\r\n            content\r\n        }\r\n    }\r\n}\r\n\r\nexport const updateNote = (id, title, content) => {\r\n    return {\r\n        type: ACTION_UPDATE_NOTE,\r\n        note: {\r\n            id,\r\n            title,\r\n            content\r\n        }\r\n    }\r\n}","export const ACTION_ADD_NOTE = \"ACTION_ADD_NOTE\";\r\nexport const ACTION_UPDATE_NOTE = \"ACTION_UPDATE_NOTE\";","import React from \"react\";\r\n\r\nexport default (props) => {\r\n    return (\r\n        <div className=\"container\">\r\n            <footer className=\"pt-4 my-md-5 pt-md-5 border-top\">\r\n                <p>Made with <span role=\"img\" aria-label=\"love\">‚ù§Ô∏è</span> by <a href=\"http://www.rashidul.xyz\">Rashidul Hasan</a></p>\r\n            </footer>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport default (props) => {\r\n    return (\r\n        <div className=\"pricing-header px-3 py-3 pt-md-5 pb-md-4 mx-auto text-center\">\r\n            <h3 className=\"display-4\">React NOTES <span role=\"img\" aria-label=\"memo\">üìù</span></h3>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport uuid from \"uuid\";\r\nimport RichTextEditor from 'react-rte';\r\nimport {connect} from \"react-redux\";\r\nimport {addNote, updateNote} from \"../redux/actionCreators\";\r\nimport ReactHtmlParser from 'react-html-parser';\r\nimport Footer from \"../components/Footer\";\r\nimport Title from \"../components/Title\";\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport {Link} from \"react-router-dom\"\r\n\r\nclass Home extends React.Component{\r\n\r\n  responseGoogle = (data) => {\r\n    console.log('sign in done', data);\r\n  }\r\n\r\n  render() {\r\n      \r\n    const notes = this.props.notes ? this.props.notes : [];\r\n\r\n      return (\r\n          <div className=\"App\">\r\n              <Title />\r\n\r\n              <div className=\"container\">\r\n                     <Link to=\"/add-or-edit\">\r\n                        <button type=\"button\" className=\"btn btn-primary mb-2\">Add New Note</button>\r\n                    </Link>\r\n              \r\n              {/* <GoogleLogin\r\n                clientId=\"1066567032794-nnpoocs7oprap8vuvv3jhp4f5lhr5elu.apps.googleusercontent.com\"\r\n                buttonText=\"Sign in with Google\"\r\n                onSuccess={this.responseGoogle}\r\n                onFailure={this.responseGoogle}\r\n                cookiePolicy={'single_host_origin'}\r\n                prompt={\"consent\"}\r\n                isSignedIn={true}\r\n              /> */}\r\n\r\n                {notes.map( i => {\r\n                    return (\r\n                    <div className=\"card mb-2\" onClick={() => {}} key={i.id}>\r\n                        <div className=\"card-body\">\r\n                            <h5 className=\"card-title\">{i.title}</h5>\r\n                            <div className=\"card-text\">{ ReactHtmlParser(i.content) }</div>\r\n                            <Link to={`/add-or-edit?mode=editing&noteId=${i.id}`} className=\"card-link\">Edit</Link>\r\n                            <a href=\"#\" className=\"card-link\">View</a>\r\n                        </div>\r\n                    </div>  \r\n                    )\r\n                })\r\n                }\r\n            \r\n              </div>\r\n              \r\n              <Footer />\r\n          </div>\r\n      );\r\n  }\r\n\r\n  \r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        notes: state.notes\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {addNote, updateNote})(Home);","import React from 'react';\r\nimport uuid from \"uuid\";\r\nimport RichTextEditor from 'react-rte';\r\nimport {connect} from \"react-redux\";\r\nimport {addNote, updateNote} from \"../redux/actionCreators\";\r\nimport Footer from \"../components/Footer\";\r\nimport Title from \"../components/Title\";\r\nimport ReactHtmlParser from 'react-html-parser';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport {Link} from \"react-router-dom\"\r\n\r\nclass AddEdit extends React.Component{\r\n\r\n  state = {\r\n      note: RichTextEditor.createEmptyValue(),\r\n      title: '',\r\n      currentlyEditingNote: null,\r\n      pageTitle: 'Add New Note'\r\n  }\r\n\r\n  componentDidMount() {\r\n    const search = this.props.location.search; \r\n    const params = new URLSearchParams(search);\r\n    const mode = params.get('mode');\r\n    const noteId = params.get('noteId');\r\n\r\n    if(mode === 'editing' && noteId) {\r\n        const {notes} = this.props;\r\n        const note = notes.find( i => i.id === String(noteId));\r\n        this.setState({\r\n            note: RichTextEditor.createValueFromString(note.content, 'html'),\r\n            title: note.title,\r\n            pageTitle: 'Edit Note',\r\n            currentlyEditingNote: note.id\r\n        });\r\n    }\r\n  }\r\n  \r\n  onSaveButtonPressed = () => {\r\n    this.state.currentlyEditingNote ? this.updateNote() : this.addNote();\r\n  }\r\n\r\n  addNote = () => {\r\n    const {title, note} = this.state;\r\n    const {addNote} = this.props;\r\n    const noteId = uuid();\r\n\r\n    addNote(noteId, title, note.toString('html'));\r\n\r\n    this.resetFields();\r\n  }\r\n\r\n  updateNote = () => {\r\n    const {title, note, currentlyEditingNote} = this.state;\r\n\r\n    if(!currentlyEditingNote) return;\r\n\r\n    const {updateNote} = this.props;\r\n\r\n    updateNote(currentlyEditingNote, title, note.toString('html'));\r\n\r\n    this.resetFields();\r\n  }\r\n\r\n  resetFields = () => {\r\n    this.setState({\r\n        title: '',\r\n        note: RichTextEditor.createEmptyValue(),\r\n        currentlyEditingNote: null\r\n    });\r\n  }\r\n\r\n  onChange = (note) => {\r\n    this.setState({note});\r\n  };\r\n\r\n  responseGoogle = (data) => {\r\n    console.log('sign in done', data);\r\n    \r\n  }\r\n\r\n  render() {\r\n\r\n\r\n      return (\r\n          <div className=\"App\">\r\n                <Title />\r\n\r\n                \r\n\r\n                <div className=\"container\">\r\n                    <nav aria-label=\"breadcrumb\">\r\n                    <ol className=\"breadcrumb\">\r\n                        <li className=\"breadcrumb-item\"><Link to=\"/\">Home</Link></li>\r\n                        <li className=\"breadcrumb-item active\" aria-current=\"page\">{this.state.pageTitle}</li>\r\n                    </ol>\r\n                    </nav>\r\n\r\n                    <div className=\"d-flex justify-content-center flex-row mb-2\">\r\n                        <input className=\"form-control\" type=\"text\" placeholder=\"Title...\" value={this.state.title}\r\n                        onChange={(e) => this.setState({title: e.target.value})}/>\r\n                    </div>\r\n                    <RichTextEditor\r\n                        value={this.state.note}\r\n                        onChange={this.onChange}\r\n                        style={{height: 200}}\r\n                        className=\"mb-2\"\r\n                    />\r\n                    <button className=\"btn btn-primary\" onClick={this.onSaveButtonPressed}>Save</button>\r\n                    <Link to=\"/\">\r\n                        <button className=\"btn btn-link\">Cancel</button>\r\n                    </Link>\r\n                </div>\r\n\r\n                <Footer />\r\n          </div>\r\n      );\r\n  }\r\n\r\n  \r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        notes: state.notes\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {addNote, updateNote})(AddEdit);","import React from 'react';\nimport {HashRouter as Router, Route, Link } from \"react-router-dom\"\nimport Home from \"./Home\";\nimport AddEdit from \"./AddEdit\";\n\nclass App extends React.Component{\n\n  \n\n  render() {\n\n      return (\n        <Router>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/add-or-edit\" exact component={AddEdit} />\n        </Router>\n      );\n  }\n\n  \n}\n\nexport default App;","const initialState = {\r\n    notes: []\r\n}\r\n\r\nexport const saveState = (state) => {\r\n    try {\r\n      const serializedState = JSON.stringify(state);\r\n      localStorage.setItem('state', serializedState);\r\n    } catch {\r\n      // ignore write errors\r\n    }\r\n};\r\n\r\nexport const loadState = () => {\r\n    try {\r\n      const serializedState = localStorage.getItem('state');\r\n      if (serializedState === null) {\r\n        return initialState;\r\n      }\r\n      return JSON.parse(serializedState);\r\n    } catch (err) {\r\n      return initialState;\r\n    }\r\n}; ","import { loadState } from \"../lib/statePersistor\";\r\nimport { ACTION_ADD_NOTE, ACTION_UPDATE_NOTE } from \"./actions\";\r\n\r\nconst initialState = loadState();\r\n\r\nexport default (state = initialState, action) => {\r\n\r\n    const {notes} = state;\r\n    \r\n    switch(action.type){\r\n        case ACTION_ADD_NOTE: \r\n            \r\n            return Object.assign({}, state, {\r\n                notes: [action.note, ...notes]\r\n            });\r\n\r\n        case ACTION_UPDATE_NOTE: \r\n        \r\n            const editedNotes = notes.map( i => {\r\n                if(i.id === action.note.id){\r\n                    return action.note;\r\n                }\r\n                return i;\r\n            })\r\n            return Object.assign({}, state, {\r\n                notes: editedNotes\r\n            });\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { createStore } from \"redux\";\r\nimport reducers from \"./reducers\";\r\nimport {saveState} from \"../lib/statePersistor\";\r\n\r\nconst store = createStore(reducers);\r\n\r\nstore.subscribe(() => {\r\n    saveState(store.getState());\r\n});\r\n\r\nexport default store;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/css/bootstrap.min.css';\nimport './assets/css/App.css';\nimport App from './pages/App';\nimport store from \"./redux\";\nimport {Provider} from \"react-redux\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}